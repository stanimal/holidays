# Bogarz holiday definitions for the Ruby Holiday gem.
# Updated 2015-12-16.
---
months:
  1:
  - name: New Year's Day
    regions: [bogarz]
    mday: 1
    observed: to_weekday_if_weekend
  5:
  - name: Memorial Day
    week: -1
    regions: [bogarz]
    wday: 1
  7:
  - name: Independence Day
    regions: [bogarz]
    mday: 4
    observed: to_weekday_if_weekend
  9:
  - name: Labor Day
    week: 1
    regions: [bogarz]
    wday: 1
  11:
  - name: Thanksgiving
    week: 4
    regions: [bogarz]
    wday: 4
  12:
  - name: Christmas Eve
    regions: [bogarz]
    mday: 24
  - name: Christmas Day
    regions: [bogarz]
    mday: 25
    observed: to_weekday_if_weekend
  - name: New Years Eve
    regions: [bogarz]
    mday: 31

methods:
  easter: |
    def self.easter(year)
      y = year
      a = y % 19
      b = y / 100
      c = y % 100
      d = b / 4
      e = b % 4
      f = (b + 8) / 25
      g = (b - f + 1) / 3
      h = (19 * a + b - d - g + 15) % 30
      i = c / 4
      k = c % 4
      l = (32 + 2 * e + 2 * i - h - k) % 7
      m = (a + 11 * h + 22 * l) / 451
      month = (h + l - 7 * m + 114) / 31
      day = ((h + l - 7 * m + 114) % 31) + 1
      Date.civil(year, month, day)
    end

tests: |
    {Date.civil(2008,1,1) => 'New Year\'s Day',
     Date.civil(2008,7,4) => 'Independence Day',
     Date.civil(2008,9,1) => 'Labor Day',
     Date.civil(2008,11,27) => 'Thanksgiving',
     Date.civil(2008,12,25) => 'Christmas Day',
     Date.civil(2008,12,26) => 'Boxing Day'}.each do |date, name|
      assert_equal name, (Holidays.on(date, :ca, :informal)[0] || {})[:name]
    end


