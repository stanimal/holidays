# encoding: utf-8
module Holidays
  # This file is generated by the Ruby Holidays gem.
  #
  # Definitions loaded: data/jewlr.yaml, data/north_america_informal.yaml
  #
  # To use the definitions in this file, load it right after you load the
  # Holiday gem:
  #
  #   require 'holidays'
  #   require 'holidays/us'
  #
  # All the definitions are available at https://github.com/alexdunae/holidays
  module Bogarz # :nodoc:
    def self.defined_regions
      [:bogarz]
    end

    def self.holidays_by_month
      {
      1 =>  [
              {:mday => 1, :observed => lambda { |date| Holidays.to_weekday_if_weekend(date) }, :observed_id => "to_weekday_if_weekend", :name => "New Year's Day", :regions => [:bogarz]}
            ],
      5 =>  [
              {:wday => 1, :week => -1, :name => "Memorial Day", :regions => [:bogarz]}
            ],
      7 =>  [
              {:mday => 4, :observed => lambda { |date| Holidays.to_weekday_if_weekend(date) }, :observed_id => "to_weekday_if_weekend", :name => "Independence Day", :regions => [:bogarz]}
            ],
      9 =>  [
              {:wday => 1, :week => 1, :name => "Labor Day", :regions => [:bogarz]}
            ],
      11 => [
              {:wday => 4, :week => 4, :name => "Thanksgiving", :regions => [:bogarz]}
            ],
      12 => [
              #{:mday => 24, :observed => lambda { |date| Holidays.to_friday_if_weekend(date) }, :observed_id => "to_weekday_if_weekend", :name => "Christmas Eve", :regions => [:bogarz]},
              {:mday => 24, :name => "Christmas Eve", :regions => [:bogarz]},
              {:mday => 25, :observed => lambda { |date| Holidays.to_weekday_if_weekend(date) }, :observed_id => "to_weekday_if_weekend", :name => "Christmas Day", :regions => [:bogarz]},
              {:mday => 31, :observed => lambda { |date| Holidays.to_friday_if_weekend(date) }, :observed_id => "to_weekday_if_weekend", :name => "New Year's Eve", :regions => [:bogarz]}
            ]
      }
    end
  end


end

Holidays.merge_defs(Holidays::Bogarz.defined_regions, Holidays::Bogarz.holidays_by_month)
